BUBBLE SORT (SINKING SORT)
    ->requires very less space memory
    ->best case being O(n) it is beneficial in determining that array is sorted or not

    ->it is inefficient for large data as the worst time case being O(n^2)

    ->time complexity = O(n^2)
    ->space complexity = O(1)

INSERTION SORT 
    ->picks one element at a time and place it in the correct position of the sorted array
    ->efficient for small data
    ->adaptive in nature that is it is appropriate for data sets which are already partially sorted

    ->insertion sort takes maximum time if the elements are sorted in reverse order

    ->time complexity O(n^2)
    ->space complexity O(1)

SELECTION SORT
    ->selects the smallest element from the unsorted array in each iteration and places that in the begining of the array.
    ->





